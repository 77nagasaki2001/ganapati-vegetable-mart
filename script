// implement getVegetable
const getVEGETABLE = ()=> {
  //fetch data from JSK API
  fetch ('https://api.jskapi.com/v1/vegetables?per_page=6')
  //then grab the response and convert to JSON
  .then(resp => console.log(resp))
  //then render the vegetables data
}
//implement renderVegetables
//for each vegetable from fetch
//creat an image elemtnt
//assign the image url to be image source
//create a heading element
//assign the text content to be the name of the vegetable
//creat a container to hold the image and neme
//append the container to item container

//when the html page loads to the DOM
document.addEventListner(;DOMConentLoaded', ())=> {
//invoke getVegetables
getVegetable();
})


//implement getVegetable
const getVegetable=() =. {
 //fetch data from JSK API
  fetch ('https://api.jskapi.com/v1/vegetables?per_page=6')
  //then grab the response and convert to JSON
  .then(resp => resp.hson())
  //then render the vegetables data
  .then(renderVegetable)
}

//implement renderVegetable
const renderVegetable = vegetableArray => {
//for each vegetable from fetch
  vegetableArray.forEach(Vegetable=>{
    const{image_url, name}=Vegetable;
    
    // create an image element
    const img=document.createElement ('img');
    //assign the image url to tbe the image source
    img.src = image_url;
    
    //create a heading element
    const vegetableName =  document.creatElement ('h3');
    //assign the text content to be the name of the vegetable
    vegetableName.textContent = name;
    //Create a coontainer to hold the image and name
    const card = document.createElement ('div');
    card.className = 'card';
    card.append (img. vegetableName);
    //append the container to item container
    document.querySelector('.item-container').appendChild(card;
  }}
}
 
mmwhen the html page loads to the Dom
document.addEventListener ('DOMContentLoaded', ()=> {
  //invoke getVegetable
  getVegetable();
})
.page-head img{
  display: block;
  margin: 0 atuto;
  width: 21rem;
}

label{
  fon-size; 20px;
}
.search-container{
  display: flex;
  justify-content: centre;
}

.card{
  display:  flex;
  flex-direction: column;
  justify-content: flex-end:
  align-items: centre;
  width: 8.1rem;
  height: 22rem;
}

card img{
width: 50%;
margin: 10px auto 0;
}

.card h3 {
  font-size: .75rem;
  text-align: center;
}

item-container {
display:  flex;
flex-flow: row wrap;
justify-content: space-around:
margin: 20rem;
}

.bttn-container {
text-align: center;

}
